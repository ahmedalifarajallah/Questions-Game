{"ast":null,"code":"var _jsxFileName = \"E:\\\\q-a-project-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport { nanoid } from 'nanoid';\nimport Begin from './components/Begin';\nimport Questions from './components/Question';\nimport { Route, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const [started, setStarted] = React.useState(false);\n  const [count, setCount] = React.useState(0);\n  // const [correct, setCorrect] = React.useState(0);\n  // const [checked, setChecked] = React.useState(false);\n  const [questions, setQuestions] = React.useState([]);\n  // const [state, setState] = React.useState([]);\n\n  const shuffleArray = arr => arr.sort(() => Math.random() - 0.5);\n  React.useEffect(() => {\n    async function getQuestions() {\n      const res = await fetch('https://opentdb.com/api.php?amount=5&category=23&difficulty=medium&type=multiple');\n      const data = await res.json();\n      // setState(data.results);\n      let q = [];\n      data.results.forEach(question => {\n        q.push({\n          id: nanoid(),\n          question: question.question,\n          correct: question.correct_answer,\n          selected: null,\n          checked: false,\n          answers: shuffleArray([...question.incorrect_answers, question.correct_answer])\n        });\n      });\n      setQuestions(q);\n    }\n    getQuestions();\n  }, [count]);\n\n  ///////////////////////////////////////////////////////////// \n  ////////////////////////////////////////////////////////\n  const questionElement = questions ? questions.map(question => {\n    return /*#__PURE__*/_jsxDEV(Questions, {\n      q: question,\n      id: question.id\n    }, question.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }) : [];\n  console.log(question);\n\n  ////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////\n\n  // const subjects = state.map(sub => {\n  //   return (\n  //     <Subjects \n  //       key={nanoid()}\n  //       question = {sub.question}\n  //       correct_answer = {sub.correct_answer}\n  //       incorrect_answers = {sub.incorrect_answers}\n  //       />\n  //       )\n  //     });\n\n  //     const all = (\n  //       <div>\n  //         {subjects}\n  //         <button className='btn check-btn'>Check Answers</button>\n  //       </div>\n  //     )\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Begin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/subjects\",\n        element: questionElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tLTRvinMzJNqwXdVa/IRqboyN68=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","nanoid","Begin","Questions","Route","Routes","App","count","setCount","useState","questions","setQuestions","shuffleArray","arr","sort","Math","random","useEffect","getQuestions","res","fetch","data","json","q","results","forEach","question","push","id","correct","correct_answer","selected","checked","answers","incorrect_answers","questionElement","map","console","log"],"sources":["E:/q-a-project-react/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport {nanoid} from 'nanoid';\nimport Begin from './components/Begin';\nimport Questions from './components/Question';\nimport { Route, Routes} from \"react-router-dom\";\n\n\n\nfunction App() {\n  // const [started, setStarted] = React.useState(false);\n  const [count, setCount] = React.useState(0);\n  // const [correct, setCorrect] = React.useState(0);\n  // const [checked, setChecked] = React.useState(false);\n  const [questions, setQuestions] = React.useState([]);\n  // const [state, setState] = React.useState([]);\n\n  const shuffleArray = (arr)=> arr.sort(()=> Math.random() - 0.5);\n  \n  React.useEffect(()=> {\n    async function getQuestions() {\n      const res = await fetch('https://opentdb.com/api.php?amount=5&category=23&difficulty=medium&type=multiple');\n      const data = await res.json();\n      // setState(data.results);\n      let q =[];\n      data.results.forEach(question => {\n        q.push({id:nanoid(), question:question.question, correct:question.correct_answer, selected:null, checked:false, answers:shuffleArray([...question.incorrect_answers, question.correct_answer])})\n      });\n      setQuestions(q);\n    }\n    getQuestions()\n  }, [count]);\n\n///////////////////////////////////////////////////////////// \n  ////////////////////////////////////////////////////////\n const questionElement = questions ? questions.map(question => {\n    return(\n      <Questions \n      key={question.id}\n      q={question}\n      id={question.id}\n      />\n    )\n }) : []\n\n console.log(question);\n\n  ////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////\n\n  // const subjects = state.map(sub => {\n  //   return (\n  //     <Subjects \n  //       key={nanoid()}\n  //       question = {sub.question}\n  //       correct_answer = {sub.correct_answer}\n  //       incorrect_answers = {sub.incorrect_answers}\n  //       />\n  //       )\n  //     });\n\n  //     const all = (\n  //       <div>\n  //         {subjects}\n  //         <button className='btn check-btn'>Check Answers</button>\n  //       </div>\n  //     )\n\n\n  return (\n\n\n    <div className=\"App\">\n      <Routes>\n        <Route path='/' element={<Begin />}></Route>\n        <Route path='/subjects' element={questionElement}></Route>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,SAAQC,MAAM,QAAO,QAAQ;AAC7B,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,SAASC,KAAK,EAAEC,MAAM,QAAO,kBAAkB;AAAC;AAIhD,SAASC,GAAG,GAAG;EAAA;EACb;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,CAAC,CAAC;EAC3C;EACA;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,KAAK,CAACS,QAAQ,CAAC,EAAE,CAAC;EACpD;;EAEA,MAAMG,YAAY,GAAIC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,MAAKC,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC;EAE/DhB,KAAK,CAACiB,SAAS,CAAC,MAAK;IACnB,eAAeC,YAAY,GAAG;MAC5B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,kFAAkF,CAAC;MAC3G,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;MAC7B;MACA,IAAIC,CAAC,GAAE,EAAE;MACTF,IAAI,CAACG,OAAO,CAACC,OAAO,CAACC,QAAQ,IAAI;QAC/BH,CAAC,CAACI,IAAI,CAAC;UAACC,EAAE,EAAC3B,MAAM,EAAE;UAAEyB,QAAQ,EAACA,QAAQ,CAACA,QAAQ;UAAEG,OAAO,EAACH,QAAQ,CAACI,cAAc;UAAEC,QAAQ,EAAC,IAAI;UAAEC,OAAO,EAAC,KAAK;UAAEC,OAAO,EAACrB,YAAY,CAAC,CAAC,GAAGc,QAAQ,CAACQ,iBAAiB,EAAER,QAAQ,CAACI,cAAc,CAAC;QAAC,CAAC,CAAC;MAClM,CAAC,CAAC;MACFnB,YAAY,CAACY,CAAC,CAAC;IACjB;IACAL,YAAY,EAAE;EAChB,CAAC,EAAE,CAACX,KAAK,CAAC,CAAC;;EAEb;EACE;EACD,MAAM4B,eAAe,GAAGzB,SAAS,GAAGA,SAAS,CAAC0B,GAAG,CAACV,QAAQ,IAAI;IAC3D,oBACE,QAAC,SAAS;MAEV,CAAC,EAAEA,QAAS;MACZ,EAAE,EAAEA,QAAQ,CAACE;IAAG,GAFXF,QAAQ,CAACE,EAAE;MAAA;MAAA;MAAA;IAAA,QAGd;EAEP,CAAC,CAAC,GAAG,EAAE;EAEPS,OAAO,CAACC,GAAG,CAACZ,QAAQ,CAAC;;EAEpB;EACF;;EAEE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAGA,oBAGE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB,QAAC,MAAM;MAAA,wBACL,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,OAAO,eAAE,QAAC,KAAK;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS,eAC5C,QAAC,KAAK;QAAC,IAAI,EAAC,WAAW;QAAC,OAAO,EAAES;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACnD;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GAtEQ7B,GAAG;AAAA,KAAHA,GAAG;AAwEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}