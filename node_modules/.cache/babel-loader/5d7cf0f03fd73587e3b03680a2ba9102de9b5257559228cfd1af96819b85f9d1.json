{"ast":null,"code":"var _jsxFileName = \"E:\\\\q-a-project-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport { nanoid } from 'nanoid';\nimport Begin from './components/Begin';\nimport Subjects from './components/Subjects';\nimport { Route, Routes, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [started, setStarted] = React.useState(false);\n  const [count, setCount] = React.useState(0);\n  const [correct, setCorrect] = React.useState(0);\n  const [checked, setChecked] = React.useState(false);\n  const [state, setState] = React.useState([]);\n  const shuffleArray = arr => arr.sort(() => Math.random() - 0.5);\n  React.useEffect(() => {\n    async function fetchData() {\n      const res = await fetch('https://opentdb.com/api.php?amount=5&category=23&difficulty=medium&type=multiple');\n      const data = await res.json();\n      // setState(data.results);\n      let q = [];\n      data.results.forEach(question => {\n        console.log(question);\n      });\n    }\n    fetchData();\n  }, []);\n\n  ///////////////////////////////////////////////////////////// \n  ////////////////////////////////////////////////////////\n\n  ////////////////////////////////////////////////////////\n  /////////////////////////////////////////////////////////////\n\n  const subjects = state.map(sub => {\n    return /*#__PURE__*/_jsxDEV(Subjects, {\n      question: sub.question,\n      correct_answer: sub.correct_answer,\n      incorrect_answers: sub.incorrect_answers\n    }, nanoid(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  });\n  const all = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [subjects, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn check-btn\",\n      children: \"Check Answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Begin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/subjects\",\n        element: all\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uPEucgGz476+vJRQh2IDWczpDkU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","nanoid","Begin","Subjects","Route","Routes","Link","App","started","setStarted","useState","count","setCount","correct","setCorrect","checked","setChecked","state","setState","shuffleArray","arr","sort","Math","random","useEffect","fetchData","res","fetch","data","json","q","results","forEach","question","console","log","subjects","map","sub","correct_answer","incorrect_answers","all"],"sources":["E:/q-a-project-react/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport {nanoid} from 'nanoid';\nimport Begin from './components/Begin';\nimport Subjects from './components/Subjects';\nimport { Route, Routes, Link} from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [started, setStarted] = React.useState(false);\n  const [count, setCount] = React.useState(0);\n  const [correct, setCorrect] = React.useState(0);\n  const [checked, setChecked] = React.useState(false);\n  const [state, setState] = React.useState([]);\n\n  const shuffleArray = (arr)=> arr.sort(()=> Math.random() - 0.5);\n  \n  React.useEffect(()=> {\n    async function fetchData() {\n      const res = await fetch('https://opentdb.com/api.php?amount=5&category=23&difficulty=medium&type=multiple');\n      const data = await res.json();\n      // setState(data.results);\n      let q =[];\n      data.results.forEach(question => {\n        console.log(question);\n      });\n    }\n    fetchData()\n  }, []);\n\n///////////////////////////////////////////////////////////// \n  ////////////////////////////////////////////////////////\n \n\n\n  ////////////////////////////////////////////////////////\n/////////////////////////////////////////////////////////////\n\n  const subjects = state.map(sub => {\n    return (\n      <Subjects \n        key={nanoid()}\n        question = {sub.question}\n        correct_answer = {sub.correct_answer}\n        incorrect_answers = {sub.incorrect_answers}\n        />\n        )\n      });\n\n      const all = (\n        <div>\n          {subjects}\n          <button className='btn check-btn'>Check Answers</button>\n        </div>\n      )\n\n\n  return (\n\n\n    <div className=\"App\">\n      <Routes>\n        <Route path='/' element={<Begin />}></Route>\n        <Route path='/subjects' element={all}></Route>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,SAAQC,MAAM,QAAO,QAAQ;AAC7B,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,KAAK,EAAEC,MAAM,EAAEC,IAAI,QAAO,kBAAkB;AAAC;AAItD,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,KAAK,CAACU,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGd,KAAK,CAACU,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGhB,KAAK,CAACU,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,KAAK,CAACU,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,YAAY,GAAIC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,MAAKC,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC;EAE/DvB,KAAK,CAACwB,SAAS,CAAC,MAAK;IACnB,eAAeC,SAAS,GAAG;MACzB,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,kFAAkF,CAAC;MAC3G,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;MAC7B;MACA,IAAIC,CAAC,GAAE,EAAE;MACTF,IAAI,CAACG,OAAO,CAACC,OAAO,CAACC,QAAQ,IAAI;QAC/BC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACvB,CAAC,CAAC;IACJ;IACAR,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;;EAER;EACE;;EAIA;EACF;;EAEE,MAAMW,QAAQ,GAAGnB,KAAK,CAACoB,GAAG,CAACC,GAAG,IAAI;IAChC,oBACE,QAAC,QAAQ;MAEP,QAAQ,EAAIA,GAAG,CAACL,QAAS;MACzB,cAAc,EAAIK,GAAG,CAACC,cAAe;MACrC,iBAAiB,EAAID,GAAG,CAACE;IAAkB,GAHtCvC,MAAM,EAAE;MAAA;MAAA;MAAA;IAAA,QAIX;EAEJ,CAAC,CAAC;EAEF,MAAMwC,GAAG,gBACP;IAAA,WACGL,QAAQ,eACT;MAAQ,SAAS,EAAC,eAAe;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAuB;EAAA;IAAA;IAAA;IAAA;EAAA,QAE3D;EAGL,oBAGE;IAAK,SAAS,EAAC,KAAK;IAAA,uBAClB,QAAC,MAAM;MAAA,wBACL,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,OAAO,eAAE,QAAC,KAAK;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS,eAC5C,QAAC,KAAK;QAAC,IAAI,EAAC,WAAW;QAAC,OAAO,EAAEK;MAAI;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACvC;IAAA;IAAA;IAAA;EAAA,QACL;AAEV;AAAC,GA3DQlC,GAAG;AAAA,KAAHA,GAAG;AA6DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}